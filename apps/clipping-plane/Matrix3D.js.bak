
function Matrix3D(aa, ab, ac, ad, 
                  ba, bb, bc, bd, 
                  ca, cb, cc, cd, 
                  da, db, dc, dd) {
    this.aa = aa;
    this.ab = ab;
    this.ac = ac;
    this.ad = ad;
    this.ba = ba;
    this.bb = bb;
    this.bc = bc;
    this.bd = bd;
    this.ca = ca;
    this.cb = cb;
    this.cc = cc;
    this.cd = cd;
    this.da = da;
    this.db = db;
    this.dc = dc;
    this.dd = dd;
    

    this.multiplyMatrix = function(m) {
        return new Matrix3D(
/* generated by perl:
@matrix = ();
foreach $i ("a".."d") {
    foreach $j ("a".."d") {
        @row = ();
        foreach $k ("a".."d") {
            push @row, "this.$i$k * m.$k$j"
        }
        push @matrix, join " + ", @row;
    }
}
print join ", \n", @matrix;
*/

this.aa * m.aa + this.ab * m.ba + this.ac * m.ca + this.ad * m.da, 
this.aa * m.ab + this.ab * m.bb + this.ac * m.cb + this.ad * m.db, 
this.aa * m.ac + this.ab * m.bc + this.ac * m.cc + this.ad * m.dc, 
this.aa * m.ad + this.ab * m.bd + this.ac * m.cd + this.ad * m.dd, 
this.ba * m.aa + this.bb * m.ba + this.bc * m.ca + this.bd * m.da, 
this.ba * m.ab + this.bb * m.bb + this.bc * m.cb + this.bd * m.db, 
this.ba * m.ac + this.bb * m.bc + this.bc * m.cc + this.bd * m.dc, 
this.ba * m.ad + this.bb * m.bd + this.bc * m.cd + this.bd * m.dd, 
this.ca * m.aa + this.cb * m.ba + this.cc * m.ca + this.cd * m.da, 
this.ca * m.ab + this.cb * m.bb + this.cc * m.cb + this.cd * m.db, 
this.ca * m.ac + this.cb * m.bc + this.cc * m.cc + this.cd * m.dc, 
this.ca * m.ad + this.cb * m.bd + this.cc * m.cd + this.cd * m.dd, 
this.da * m.aa + this.db * m.ba + this.dc * m.ca + this.dd * m.da, 
this.da * m.ab + this.db * m.bb + this.dc * m.cb + this.dd * m.db, 
this.da * m.ac + this.db * m.bc + this.dc * m.cc + this.dd * m.dc, 
this.da * m.ad + this.db * m.bd + this.dc * m.cd + this.dd * m.dd

        );        
    }



    this.multiplyScalar = function(s) {
        return new Matrix3D(
/* generated by perl:
@lines = ();
foreach $i ("a".."d") {
    @row = ();
    foreach $j ("a".."d") {
        push @row, "this.$i$j * s";
    }
    push @lines, (join ", ", @row);
}
print join ", \n", @lines;
*/
this.aa * s, this.ab * s, this.ac * s, this.ad * s, 
this.ba * s, this.bb * s, this.bc * s, this.bd * s, 
this.ca * s, this.cb * s, this.cc * s, this.cd * s, 
this.da * s, this.db * s, this.dc * s, this.dd * s);

    }



    this.multiplyVector = function(v) {

    }


    this.toString = function() {
        return [[this.aa, this.ab, this.ac, this.ad].join(", "),
               [this.ba, this.bb, this.bc, this.bd].join(", "),
               [this.ca, this.cb, this.cc, this.cd].join(", "),
               [this.da, this.db, this.dc, this.dd].join(", ")].join("\n");

    }

}

Matrix3D.identity = function() {
    return new Matrix3D(
        1, 0, 0, 0,
        0, 1, 0, 0,
        0, 0, 1, 0,
        0, 0, 0, 1
    );
}


function testMatrix3D() {
    console.debug(Matrix3D.identity().multiplyMatrix(Matrix3D.identity().multiplyMatrix(new Matrix3D(
    0, 0, 0, 0,
    0, 1, 0, 0,
    0, 0, 2, 0,
    0, 0, 0, 3
    ))).multiplyScalar(5).toString());
}

